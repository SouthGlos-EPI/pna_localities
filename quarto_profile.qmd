---
title: "`r paste(params$locality, ' PNA Locality Profile')`"
format: 
    docx:
     reference-doc: ref_doc.docx
params: 
  locality: "Kingswood"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, comment = FALSE, message = FALSE)

locality <- params$locality

library(here) #project directory working

# read in script which carries out data prep (filtering, manipulation, etc)
source(here("data_prep.R"))

# Determine LA of chosen locality
local_authority <- unique(filter(lsoa_loc_lookup, 
                                 pna_locality == locality)$local_authority)

# Function to replace 0s in text with "no", and numbers under 12 with text
number_text <- function(x, cap = TRUE) {
  if (x == 0) {
    if (cap == T) "No" 
      else "no"
    
  } else if (x < 10) {
    if (cap == T) str_to_title(as.character(as.english(x))) 
      else as.character(as.english(x))
    
  } else {
    as.character(x)
  }
}

pluralise <- function(count, singular, plural = NULL) {
  
    if (is.null(plural)) {
    # Handle irregular plurals like 'pharmacy' to 'pharmacies'
    if (grepl("y$", singular)) {
      plural <- sub("y$", "ies", singular)
    } else {
      plural <- paste0(singular, "s")
    }
    }
  
  if (count == 1) {
    singular
  } else {
    plural
  }
}

```

## Locality Overview

```{r}

# Compute values for text

# Total Locality population
loc_pop <- unique(filter(age_sex_locality, pna_locality == locality)$total_pop)

# Age/sex info
perc_fem <- round_half_up(sum(
    filter(age_sex_locality, 
           pna_locality == locality,
           sex == "Female")$pop
    )/loc_pop*100, 1
  )

perc_male <- 100 - perc_fem

perc_over65 <- round_half_up(sum(
  filter(age_sex_locality, 
         pna_locality == locality, 
         age_band_5y %in% c("65-69", "70-74", "75-79", "80-84", "85-89", "90+"))$pop
  )/loc_pop*100, 1
  )

# Deprivation
quint1_local <- round_half_up(filter(
  dep_local, 
  pna_locality == locality,
  imd_quintile_local == "1")$pop
    /loc_pop*100, 1
  )

quint1_national <- round_half_up(filter(
  dep_national, 
  pna_locality == locality,
  imd_quintile_national == "1")$pop
    /loc_pop*100, 1
  )

```


`r locality` PNA Locality in `r local_authority` has an estimated population of `r format(loc_pop, big.mark = ",")` as of `r lsoa_pop_year`. Summary statistics:

* `r perc_fem`% of its residents are female, `r perc_male`% are male.
* `r perc_over65`% are 65 years and older.
* `r quint1_local`% of its population live in the 20% most deprived areas of `r local_authority`.
* `r quint1_national`% live in the 20% most deprived areas of England.

**Figure X:** `r locality` PNA Locality population breakdown by age & sex (`r lsoa_pop_year`).
```{r}
#| fig-cap: "Source: Office for National Statistics, mid-year small area population estimates."
#| fig-width: 8
#| fig-height: 5

age_sex1 <- age_sex_locality %>% 
  filter(pna_locality == locality) %>% 
  mutate(perc = if_else(sex == "Male", perc*(-1), perc))

age_sex2 <- age_sex_la %>% 
  filter(lad_2021_name == local_authority) %>% 
  mutate(perc = if_else(sex == "Male", perc*(-1), perc))

ggplot(data= age_sex1,
       aes(x = age_band_5y)) + 
  
  # plot locality
  geom_bar(aes(y = perc, fill = sex), 
           stat = "identity", 
           colour = "black",
           linewidth = 0.2,
           width = 0.8) +
  
  # plot local authority
  geom_line(data = age_sex2,
            aes(y = perc, group = sex, color = sex),
            size = 1) +
  
  geom_point(data = age_sex2,
            aes(y = perc, group = sex, color = sex, shape = sex),
            size = 3) +
  
  #aesthetics
  scale_fill_manual(values = palette[1:2], 
                    guide = guide_legend(reverse = TRUE,
                                          title.position="top", title.hjust = 0.5)) +
  
  scale_color_manual(values = palette[3:4], 
                     guide = guide_legend(reverse = TRUE,
                                          title.position="top", title.hjust = 0.5)) + 
  
  scale_shape_manual(values = c(16, 17), 
                     guide = guide_legend(reverse = TRUE)) +
  
  scale_y_continuous(labels = abs, breaks = seq(-100, 100, by = 1)) +
  custom_theme() +
  
  
  labs(x = "Age group",
       y = "Percentage of population (%)",
       color = local_authority,
       shape = local_authority,
       fill = locality) +
  
  coord_flip()


```


## Overview of Pharmacies

```{r}

# Compute values for text
loc_pharm_total <- filter(pharm_types, pna_locality == locality)$total
loc_disp_prac_branch <- filter(pharm_types, pna_locality == locality)$disp_prac_branch
loc_pharm_first <- filter(pharm_types, pna_locality == locality)$pharmacy_first
loc_pharm_chain <- filter(pharm_types, pna_locality == locality)$chain
loc_pharm_independ <- filter(pharm_types, pna_locality == locality)$independ
loc_pharm_40h <- filter(pharm_types, pna_locality == locality)$x40_hour_contract
loc_pharm_100h <- filter(pharm_types, pna_locality == locality)$x100_hour_contract
loc_pharm_ds <- filter(pharm_types, pna_locality == locality)$distance_selling
loc_pharm_dac <- filter(pharm_types, pna_locality == locality)$dac
loc_pharm_lps <- filter(pharm_types, pna_locality == locality)$lps

# Create list for chains, to display only if there are any
chain_list <- if (loc_pharm_chain != 0) {
  
  list <- pharm_chains %>%
    filter(pna_locality == locality) %>% 
    rowwise %>% 
    mutate(num = number_text(n)) %>% 
    ungroup %>% 
    mutate(list = paste0("\n  - ", num, " by ", name)) %>%
    pull(list) %>%
    paste(collapse = "\n")
  
  paste0(":\n", list)
  
} else {"."}
  

# Create list for 100 hour pharmacies, to display only if there are any
hr100_list <- if (loc_pharm_100h > 1) {
  
  list <- pharm_100h %>%
    filter(pna_locality == locality) %>% 
    mutate(list = paste0("\n  - ", name_and_address)) %>%
    pull(list) %>%
    paste(collapse = "\n")
  
  paste0("The 100-hour pharmacies are:\n", list)
  
} else if (loc_pharm_100h == 1) {"."
  
    list <- pharm_100h %>%
    filter(pna_locality == locality) %>% 
    mutate(list = paste0("\n  - ", name_and_address)) %>%
    pull(list) %>%
    paste(collapse = "\n")
  
  paste0("The 100-hour pharmacy is ", list, ".")
  
} else {""}

```

As of `r pharm_data_month`, there are `r number_text(loc_pharm_total, cap = F)` pharmacies in `r locality` PNA locality. There `r pluralise(loc_disp_prac_branch, "is", "are")` `r number_text(loc_disp_prac_branch, cap = F)` `r pluralise(loc_disp_prac_branch, "practice")` or `r pluralise(loc_disp_prac_branch, "branch of a practice", "branches of practices")` with dispensing doctors providing drugs and appliances to their own patients.

Of the `r number_text(loc_pharm_total, cap = F)` pharmacies, there are:

* `r number_text(loc_pharm_first)` providing Pharmacy First services.
* `r number_text(loc_pharm_independ)` independent `r pluralise(loc_pharm_independ, "pharmacy")`.
* `r number_text(loc_pharm_chain)` `r pluralise(loc_pharm_chain, "pharmacy")` owned by national pharmacy chains`r chain_list`
* `r number_text(loc_pharm_40h)` `r pluralise(loc_pharm_40h, "pharmacy")` with 40-hour contracts and `r number_text(loc_pharm_100h, cap = F)` `r pluralise(loc_pharm_100h, "pharmacy")` with 100-hour contracts. `r hr100_list`
* `r number_text(loc_pharm_ds)` distance-selling `r pluralise(loc_pharm_ds, "pharmacy")`
* `r number_text(loc_pharm_lps)` `r pluralise(loc_pharm_lps, "pharmacy")` with local pharmaceutical services contracts
* `r number_text(loc_pharm_dac)` dispensing appliance `r pluralise(loc_pharm_dac, "contractor")` (DAC).

Tables X and X show the provision in `r locality` compared to other areas. Note that there is no national expectation or standard on the ratio of pharmacies to population. These ratios do not consider the size and staffing of pharmacies which will determine the size of the population they are able to serve.

**Table X:** Number and rate of pharmacies in `r locality` PNA Locality, `r local_authority`, and the South West (`r pharm_data_month`).

```{r}

pharm_rate %>% 
  filter(Area %in% c("South West", locality, local_authority)) %>% 
  mutate(Area = if_else(Area == locality, "Locality", Area)) %>% 
  kable()

```
*Source: NHS South West Collaborative Commissioning Hub*

*Notes: Populations for localities are based on the latest ONS mid-year population estimates for small areas (`r lsoa_pop_year`), and populations for local authority and region are based on the latest subnational mid-year estimates (`r high_lvl_pop_year`).*


**Table X:** Number and rate of items dispensed in `r locality` PNA Locality, `r local_authority`, the South West, and England (`r unique(disp_data_loc$fy)`).

```{r}

disp_table %>% 
  filter(Area %in% c("South West", "England", locality, local_authority)) %>% 
  mutate(Area = if_else(Area == locality, "Locality", Area)) %>% 
  kable()

```

*Source: NHS Business Services Authority*

*Notes: Populations for localities are based on the latest ONS mid-year population estimates for small areas (`r lsoa_pop_year`), and populations for local authority and region are based on the latest subnational mid-year estimates (`r high_lvl_pop_year`).*

## Access to Essential Services

```{r}

# Compute values for text
loc_pharm_7days <- nrow(filter(pharm_hours_summary, pna_locality == locality, days_open == 7))
loc_pharm_6days <- nrow(filter(pharm_hours_summary, pna_locality == locality, days_open == 6))
loc_pharm_5days <- nrow(filter(pharm_hours_summary, pna_locality == locality, days_open == 5))
loc_pharm_open_before8 <- nrow(filter(pharm_hours_summary, pna_locality == locality, days_open_before8 >= 5))
loc_pharm_open_past630 <- nrow(filter(pharm_hours_summary, pna_locality == locality, days_open_past630 >= 5))

```

As of `r pharm_data_month`, in `r locality` PNA locality, there are:

* `r number_text(loc_pharm_7days)` `r pluralise(loc_pharm_7days, "pharmacy")` open seven days a week
* `r number_text(loc_pharm_6days)` `r pluralise(loc_pharm_6days, "pharmacy")` open six days a week
* `r number_text(loc_pharm_5days)` `r pluralise(loc_pharm_5days, "pharmacy")` open five days a week
* `r number_text(loc_pharm_open_before8)` `r pluralise(loc_pharm_open_before8, "pharmacy")` open before 8:00 at least five days a week
* `r number_text(loc_pharm_open_past630)` `r pluralise(loc_pharm_open_past630, "pharmacy")` open past 18:30 at least five days a week

**Figure X:** `r locality` PNA Locality pharmacy coverage across the week (`r pharm_data_month`).
```{r}
#| fig-cap: "Source: NHS South West Collaborative Commissioning Hub"
#| fig-width: 8
#| fig-height: 5

pharm_hours %>% 
  filter(pna_locality == locality) %>% 

  # plotting
  ggplot(aes(y = day_of_week, 
           xmin = open_time, 
           xmax = close_time)) +
  
  geom_rect(aes(xmin = open_time, 
                xmax = close_time,
                ymin = as.numeric(day_of_week) - 0.4,
                ymax = as.numeric(day_of_week) + 0.4),
            fill = palette[1],
            alpha = 0.3) +
  
  # aesthetics
  scale_x_datetime(date_labels = "%H:%M", 
                   date_breaks = "2 hours") +
  
  labs(x = "Time of day", 
       y = "Day of the week",
       subtitle = "Note: The darker the bar, the more pharmacies are open in the area at those times.") +
  
  custom_theme()+
  theme(panel.grid.minor.x = element_line(linetype = 'dotted', linewidth = 1, color = "grey80"),
        plot.subtitle.position = "plot",
        plot.subtitle = element_text(size = 12, face = "italic"))


```



## Provision of Advanced and Enhanced Services

```{r}

# Compute values for text
loc_n_nms <- format(filter(disp_data_loc, area == locality)$n_nms, big.mark = ",")
loc_pharm_nms <- filter(pharm_types, pna_locality == locality)$nms
loc_pharm_smp <- filter(pharm_types, pna_locality == locality)$specialist_medicines_provider
loc_pharm_flu <- filter(pharm_types, pna_locality == locality)$flu
loc_pharm_aur <- filter(pharm_types, pna_locality == locality)$appliance_usage_reviews
loc_pharm_contracep <- filter(pharm_types, pna_locality == locality)$contraception_service
loc_pharm_lfd <- filter(pharm_types, pna_locality == locality)$lft
loc_pharm_ht <- filter(pharm_types, pna_locality == locality)$hypertension_case_finding
loc_pharm_smok <- filter(pharm_types, pna_locality == locality)$smoking_cessation

```

Below is a summary of the provision of advanced and enhanced services in `r locality` PNA locality as of `r pharm_data_month`.

**New Medicine Service** (NMS) accreditation: `r loc_pharm_nms` `r pluralise(loc_pharm_nms, "pharmacy")`. In `r unique(disp_data_loc$fy)` (the last full year of data), there were `r loc_n_nms` NMSs undertaken.

**Specialist Medicines Provider**: `r number_text(loc_pharm_smp)` `r pluralise(loc_pharm_smp, "pharmacy")`. 

**Influenza vaccination**: `r number_text(loc_pharm_flu)` `r pluralise(loc_pharm_flu, "pharmacy")` providing this advanced service. 

**Appliance Use Reviews**: `r number_text(loc_pharm_aur)` `r pluralise(loc_pharm_aur, "pharmacy")` providing this service. Many appliances will be dispensed by DACs based around the country, which may provide this service.

**NHS Pharmacy contraception**: `r number_text(loc_pharm_contracep)` `r pluralise(loc_pharm_contracep, "pharmacy")` providing this service.

**Lateral Flow Device test supply**: `r number_text(loc_pharm_lfd)` `r pluralise(loc_pharm_lfd, "pharmacy")` providing this service.

**Hypertension Case-Finding**: `r number_text(loc_pharm_ht)` `r pluralise(loc_pharm_ht, "pharmacy")` providing this service.

**Stop Smoking**: `r number_text(loc_pharm_smok)` `r pluralise(loc_pharm_smok, "pharmacy")` providing this service.

